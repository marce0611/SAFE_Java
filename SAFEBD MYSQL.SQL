-- Generated by Oracle SQL Developer Data Modeler 18.2.0.179.0756
--   at:        2018-10-21 13:47:38 CLST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE alergia (
    id            INT(5) NOT NULL,
    descripcion   VARCHAR(20) NOT NULL
);

ALTER TABLE alergia ADD CONSTRAINT alergia_pk PRIMARY KEY ( id );

CREATE TABLE asistencia (
    id         INT(5) NOT NULL,
    estado     CHAR(1) NOT NULL,
    fecha      DATE NOT NULL,
    curso_id   INT(5) NOT NULL
);

CREATE UNIQUE INDEX asistencia__idx ON
    asistencia (
        curso_id
    ASC );

ALTER TABLE asistencia ADD CONSTRAINT asistencia_pk PRIMARY KEY ( id );

CREATE TABLE atencion (
    id                 INT(5) NOT NULL,
    descripcion        VARCHAR(300) NOT NULL,
    fecha_atencion     DATE NOT NULL,
    ficha_medica_id    INT(5) NOT NULL,
    visita_medica_id   INT(5) NOT NULL
);

ALTER TABLE atencion ADD CONSTRAINT atencion_pk PRIMARY KEY ( id );

CREATE TABLE capacitacion (
    id                     INT(5) NOT NULL,
    descripcion            VARCHAR(100) NOT NULL,
    participantes_min      INT(5) NOT NULL,
    expositor              VARCHAR(200) NOT NULL,
    fecha_comienzo         DATE NOT NULL,
    fecha_termino          DATE NOT NULL,
    plan_capacitacion_id   INT(5) NOT NULL
);

ALTER TABLE capacitacion ADD CONSTRAINT capacitacion_pk PRIMARY KEY ( id );

CREATE TABLE contrato (
    id                      INT(5) NOT NULL,
    contrato                VARCHAR(100) NOT NULL,
    fecha_inicio_contrato   DATE NOT NULL,
    estado                  CHAR(1) NOT NULL,
    empresa_id              INT(5) NOT NULL
);

ALTER TABLE contrato ADD CONSTRAINT contrato_pk PRIMARY KEY ( id );

CREATE TABLE curso (
    id                INT(5) NOT NULL,
    descripcion       VARCHAR(200) NOT NULL,
    capacitacion_id   INT(5) NOT NULL
);

ALTER TABLE curso ADD CONSTRAINT curso_pk PRIMARY KEY ( id );

CREATE TABLE empresa (
    usuario_id       INT(5) NOT NULL,
    nombre_empresa   VARCHAR(50) NOT NULL,
    run_empresa      VARCHAR(15) NOT NULL
);

ALTER TABLE empresa ADD CONSTRAINT empresa_pk PRIMARY KEY ( usuario_id );

ALTER TABLE empresa ADD CONSTRAINT empresa_run_empresa_un UNIQUE ( run_empresa );

CREATE TABLE evaluacion (
    id                       INT(5) NOT NULL,
    fecha_evaluacion         DATE NOT NULL,
    descripcion_evaluacion   VARCHAR(200) NOT NULL,
    tipo_evaluacion_id       INT(5) NOT NULL,
    contrato_id              INT(5) NOT NULL,
    estado                   CHAR(1) NOT NULL
);

ALTER TABLE evaluacion ADD CONSTRAINT evaluacion_pk PRIMARY KEY ( id );

CREATE TABLE examen (
    id               INT(5) NOT NULL,
    descripcion      VARCHAR(200) NOT NULL,
    fecha_examen     DATE NOT NULL,
    tipo_examen_id   INT(5) NOT NULL,
    atencion_id      INT(5) NOT NULL
);

ALTER TABLE examen ADD CONSTRAINT examen_pk PRIMARY KEY ( id );

CREATE TABLE feriado (
    fecha   VARCHAR(300) NOT NULL
);

CREATE TABLE ficha_medica (
    id                INT(5) NOT NULL,
    descripcion       VARCHAR(300) NOT NULL,
    estado            CHAR(1) NOT NULL,
    fecha_ficha       DATE NOT NULL,
    estatura          VARCHAR(20) NOT NULL,
    peso              VARCHAR(20) NOT NULL,
    grupo_sanguineo   VARCHAR(3),
    trabajador_id     INT(5) NOT NULL
);

CREATE UNIQUE INDEX ficha_medica__idx ON
    ficha_medica (
        trabajador_id
    ASC );

ALTER TABLE ficha_medica ADD CONSTRAINT ficha_medica_pk PRIMARY KEY ( id );

CREATE TABLE informe_final (
    id              INT(5) NOT NULL,
    recomendacion   VARCHAR(300) NOT NULL,
    usuario_id      INT(5) NOT NULL,
    estado          CHAR(1) NOT NULL,
    evaluacion_id   INT(5) NOT NULL
);

CREATE UNIQUE INDEX informe_final__idx ON
    informe_final (
        evaluacion_id
    ASC );

ALTER TABLE informe_final ADD CONSTRAINT informe_final_pk PRIMARY KEY ( id );

CREATE TABLE medico (
    usuario_id         INT(5) NOT NULL,
    disponibilidad     VARCHAR(100) NOT NULL,
    email_privado      VARCHAR(200),
    telefono_privado   INT(20)
);

ALTER TABLE medico ADD CONSTRAINT medico_pk PRIMARY KEY ( usuario_id );

ALTER TABLE medico ADD CONSTRAINT medico_email_privado_un UNIQUE ( email_privado );

CREATE TABLE perfil_usuario (
    id                   INT(5) NOT NULL,
    descripcion_perfil   VARCHAR(20) NOT NULL
);

ALTER TABLE perfil_usuario ADD CONSTRAINT perfil_usuario_pk PRIMARY KEY ( id );

CREATE TABLE plan_capacitacion (
    id                 INT(5) NOT NULL,
    descripcion_plan   VARCHAR(200) NOT NULL,
    fecha_registro     DATE NOT NULL,
    contrato_id        INT(5) NOT NULL,
    estado             CHAR(1) NOT NULL
);

ALTER TABLE plan_capacitacion ADD CONSTRAINT plan_capacitacion_pk PRIMARY KEY ( id );

CREATE TABLE registro_alergia (
    alergia_id        INT(5) NOT NULL,
    ficha_medica_id   INT(5) NOT NULL
);

ALTER TABLE registro_alergia ADD CONSTRAINT registro_alergia_pk PRIMARY KEY ( alergia_id,
                                                                              ficha_medica_id );

CREATE TABLE registro_participantes (
    trabajador_id   INT(5) NOT NULL,
    curso_id        INT(5) NOT NULL,
    estado          CHAR(1)
);

ALTER TABLE registro_participantes ADD CONSTRAINT registro_participantes_pk PRIMARY KEY ( trabajador_id,
                                                                                          curso_id );

CREATE TABLE tipo_evaluacion (
    id            INT(5) NOT NULL,
    descripcion   VARCHAR(50) NOT NULL
);

ALTER TABLE tipo_evaluacion ADD CONSTRAINT tipo_evaluacion_pk PRIMARY KEY ( id );

CREATE TABLE tipo_examen (
    id            INT(5) NOT NULL,
    tipo_examen   VARCHAR(100) NOT NULL
);

ALTER TABLE tipo_examen ADD CONSTRAINT tipo_examen_pk PRIMARY KEY ( id );

CREATE TABLE trabajador (
    usuario_id         INT(5) NOT NULL,
    email_privado      VARCHAR(200),
    telefono_privado   INT(20),
    estado_riesgo      CHAR(1) NOT NULL,
    contrato_id        INT(5) NOT NULL,
    empresa_id         INT(5) NOT NULL
);

ALTER TABLE trabajador ADD CONSTRAINT trabajador_pk PRIMARY KEY ( usuario_id );

ALTER TABLE trabajador ADD CONSTRAINT trabajador_email_privado_un UNIQUE ( email_privado );

CREATE TABLE usuario (
    id                  INT(5) NOT NULL,
    rut_usuario         INT(12) NOT NULL,
    contrasena          VARCHAR(200) NOT NULL,
    nombre              VARCHAR(200) NOT NULL,
    ape_paterno         VARCHAR(100) NOT NULL,
    ape_materno         VARCHAR(100) NOT NULL,
    direccion           VARCHAR(200),
    telefono            INT(20),
    email               VARCHAR(200) NOT NULL,
    registro            DATE NOT NULL,
    perfil_usuario_id   INT(5) NOT NULL
);

ALTER TABLE usuario ADD CONSTRAINT usuario_pk PRIMARY KEY ( id );

ALTER TABLE usuario ADD CONSTRAINT usuario_rut_usuario_un UNIQUE ( rut_usuario );

ALTER TABLE usuario ADD CONSTRAINT usuario_email_un UNIQUE ( email );

CREATE TABLE usuario_evaluacion (
    usuario_id      INT(5) NOT NULL,
    evaluacion_id   INT(5) NOT NULL
);

ALTER TABLE usuario_evaluacion ADD CONSTRAINT usuario_evaluacion_pk PRIMARY KEY ( usuario_id,
                                                                                  evaluacion_id );

CREATE TABLE visita_medica (
    id                  INT(5) NOT NULL,
    fecha_visita        DATE NOT NULL,
    estado              CHAR(1) NOT NULL,
    contrato_id         INT(5) NOT NULL,
    medico_usuario_id   INT(5) NOT NULL
);

ALTER TABLE visita_medica ADD CONSTRAINT visita_medica_pk PRIMARY KEY ( id );

ALTER TABLE asistencia
    ADD CONSTRAINT asistencia_curso_fk FOREIGN KEY ( curso_id )
        REFERENCES curso ( id );

ALTER TABLE atencion
    ADD CONSTRAINT atencion_ficha_medica_fk FOREIGN KEY ( ficha_medica_id )
        REFERENCES ficha_medica ( id );

ALTER TABLE atencion
    ADD CONSTRAINT atencion_visita_medica_fk FOREIGN KEY ( visita_medica_id )
        REFERENCES visita_medica ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE capacitacion
    ADD CONSTRAINT capacitacion_plan_capacitacion_fk FOREIGN KEY ( plan_capacitacion_id )
        REFERENCES plan_capacitacion ( id );

ALTER TABLE contrato
    ADD CONSTRAINT contrato_empresa_fk FOREIGN KEY ( empresa_id )
        REFERENCES empresa ( usuario_id );

ALTER TABLE curso
    ADD CONSTRAINT curso_capacitacion_fk FOREIGN KEY ( capacitacion_id )
        REFERENCES capacitacion ( id );

ALTER TABLE empresa
    ADD CONSTRAINT empresa_usuario_fk FOREIGN KEY ( usuario_id )
        REFERENCES usuario ( id );

ALTER TABLE evaluacion
    ADD CONSTRAINT evaluacion_contrato_fk FOREIGN KEY ( contrato_id )
        REFERENCES contrato ( id );

ALTER TABLE evaluacion
    ADD CONSTRAINT evaluacion_tipo_evaluacion_fk FOREIGN KEY ( tipo_evaluacion_id )
        REFERENCES tipo_evaluacion ( id );

ALTER TABLE examen
    ADD CONSTRAINT examen_atencion_fk FOREIGN KEY ( atencion_id )
        REFERENCES atencion ( id );

ALTER TABLE examen
    ADD CONSTRAINT examen_tipo_examen_fk FOREIGN KEY ( tipo_examen_id )
        REFERENCES tipo_examen ( id );

ALTER TABLE ficha_medica
    ADD CONSTRAINT ficha_medica_trabajador_fk FOREIGN KEY ( trabajador_id )
        REFERENCES trabajador ( usuario_id );

ALTER TABLE informe_final
    ADD CONSTRAINT informe_final_evaluacion_fk FOREIGN KEY ( evaluacion_id )
        REFERENCES evaluacion ( id );

ALTER TABLE informe_final
    ADD CONSTRAINT informe_final_usuario_fk FOREIGN KEY ( usuario_id )
        REFERENCES usuario ( id );

ALTER TABLE medico
    ADD CONSTRAINT medico_usuario_fk FOREIGN KEY ( usuario_id )
        REFERENCES usuario ( id );

ALTER TABLE plan_capacitacion
    ADD CONSTRAINT plan_capacitacion_contrato_fk FOREIGN KEY ( contrato_id )
        REFERENCES contrato ( id );

ALTER TABLE registro_alergia
    ADD CONSTRAINT registro_alergia_alergia_fk FOREIGN KEY ( alergia_id )
        REFERENCES alergia ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE registro_alergia
    ADD CONSTRAINT registro_alergia_ficha_medica_fk FOREIGN KEY ( ficha_medica_id )
        REFERENCES ficha_medica ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE registro_participantes
    ADD CONSTRAINT registro_participantes_curso_fk FOREIGN KEY ( curso_id )
        REFERENCES curso ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE registro_participantes
    ADD CONSTRAINT registro_participantes_trabajador_fk FOREIGN KEY ( trabajador_id )
        REFERENCES trabajador ( usuario_id );

ALTER TABLE trabajador
    ADD CONSTRAINT trabajador_contrato_fk FOREIGN KEY ( contrato_id )
        REFERENCES contrato ( id );

ALTER TABLE trabajador
    ADD CONSTRAINT trabajador_empresa_fk FOREIGN KEY ( empresa_id )
        REFERENCES empresa ( usuario_id );

ALTER TABLE trabajador
    ADD CONSTRAINT trabajador_usuario_fk FOREIGN KEY ( usuario_id )
        REFERENCES usuario ( id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE usuario_evaluacion
    ADD CONSTRAINT usuario_evaluacion_evaluacion_fk FOREIGN KEY ( evaluacion_id )
        REFERENCES evaluacion ( id );

ALTER TABLE usuario_evaluacion
    ADD CONSTRAINT usuario_evaluacion_usuario_fk FOREIGN KEY ( usuario_id )
        REFERENCES usuario ( id );

ALTER TABLE usuario
    ADD CONSTRAINT usuario_perfil_usuario_fk FOREIGN KEY ( perfil_usuario_id )
        REFERENCES perfil_usuario ( id );

ALTER TABLE visita_medica
    ADD CONSTRAINT visita_medica_contrato_fk FOREIGN KEY ( contrato_id )
        REFERENCES contrato ( id );

ALTER TABLE visita_medica
    ADD CONSTRAINT visita_medica_medico_fk FOREIGN KEY ( medico_usuario_id )
        REFERENCES medico ( usuario_id );

CREATE OR REPLACE TRIGGER arc_fkarc_1_trabajador BEFORE
    INSERT OR UPDATE OF usuario_id ON trabajador
    FOR EACH ROW
DECLARE
    d   INT(5);
BEGIN
    SELECT
        a.id
    INTO d
    FROM
        usuario a
    WHERE
        a.id =:new.usuario_id;

    IF ( d IS NULL OR d <>:new.id ) THEN
        raise_application_error(-20223,'FK trabajador_usuario_FK in Table trabajador violates Arc constraint on Table usuario - discriminator column id doesn''t have value :new.id'
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_empresa BEFORE
    INSERT OR UPDATE OF usuario_id ON empresa
    FOR EACH ROW
DECLARE
    d   INT(5);
BEGIN
    SELECT
        a.id
    INTO d
    FROM
        usuario a
    WHERE
        a.id =:new.usuario_id;

    IF ( d IS NULL OR d <>:new.id ) THEN
        raise_application_error(-20223,'FK empresa_usuario_FK in Table empresa violates Arc constraint on Table usuario - discriminator column id doesn''t have value :new.id'
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_medico BEFORE
    INSERT OR UPDATE OF usuario_id ON medico
    FOR EACH ROW
DECLARE
    d   INT(5);
BEGIN
    SELECT
        a.id
    INTO d
    FROM
        usuario a
    WHERE
        a.id =:new.usuario_id;

    IF ( d IS NULL OR d <>:new.id ) THEN
        raise_application_error(-20223,'FK medico_usuario_FK in Table medico violates Arc constraint on Table usuario - discriminator column id doesn''t have value :new.id'
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            23
-- CREATE INDEX                             3
-- ALTER TABLE                             55
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   5
-- WARNINGS                                 0
